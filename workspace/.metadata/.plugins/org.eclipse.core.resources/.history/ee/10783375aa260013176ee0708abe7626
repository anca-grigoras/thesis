/**
 * 
 */
package tera.protocols;

import java.util.Vector;

import peernet.core.Descriptor;
import poldercast.protocols.CyclonSettings;

/**
 * @author anca
 *
 */
public class Cyclon extends Gossip
{
  /**
   * This variable holds all protocol-instance related variable,
   * that have a fixed value for all view participating in an
   * instance of a protocol, such as the view length or gossip length.
   */
  public CyclonSettings cyclonSettings;
  
  /*
   * When a node initiates a gossip request, it sends some part of its view to
   * the other peer. This part of the view is moved from 'view' to 'shippedView'
   * and when a response is received, it is merged back to 'view', if there are
   * available slots (e.g., in case of duplicates, or an initially non-full
   * view).
   * 
   * So, this container is to be filled in nextCycle(), and "emptied" in
   * processResponse().
   */
  Vector<Descriptor> shippedDescriptors= null;
  /**
   * @param prefix
   */
  public Cyclon(String prefix)
  {
    super(prefix);
    // TODO Auto-generated constructor stub
  }
}
