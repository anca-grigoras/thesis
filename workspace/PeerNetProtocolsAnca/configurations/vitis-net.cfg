CV                       20
CG                       10

RT						 15

NODES                    1000
CYCLE                    6000
TICKS_PER_CYCLE 		 6000

PORT                     14000
BOOTSTRAP_PORT           11000

engine.mode              net
engine.duration          CYCLE *15
random.seed              0
network.size             NODES

#######################
# POLDERCAST PROTOCOL #
#######################

include.protocol         cyclon, tman, vitis, dissemination

protocol.cyclon          vitis.protocols.Cyclon
{
  descriptor             vitis.descriptor.DescriptorProfile
  settings               vitis.protocols.CyclonSettings
  
  view                   CV
  gossip                 CG

  step                   TICKS_PER_CYCLE
  from				5*TICKS_PER_CYCLE
  randstart

  transport              udp
}

protocol.tman		     vitis.protocols.TMan
{
  linkable				 cyclon
  
  descriptor			 vitis.descriptor.DescriptorProfile
  settings				 vitis.protocols.TManSettings
  
  sendLinkableItems		 true
  
  viewSize				 RT
  small-world-links		 3
  idLength				 20					 
  
  step					 TICKS_PER_CYCLE
  from				5*TICKS_PER_CYCLE
  randstart
  
  transport				 udp
}

protocol.vitis		     vitis.protocols.Vitis
{
  linkable				 tman
  
  descriptor			 vitis.descriptor.DescriptorProfile
  settings				 vitis.protocols.VitisSettings
  
  sendLinkableItems		 true
  
  viewSize				 VV
  threshold				 10
  d						 5
  
  step					 TICKS_PER_CYCLE
  from				5*TICKS_PER_CYCLE
  randstart
  
  transport				 udp
}

protocol.dissemination	 vitis.protocols.Dissemination
{
  descriptor			 vitis.descriptor.DescriptorProfile
  settings				 vitis.protocols.DisseminationSettings
  
  routing				 vitis
  step					 TICKS_PER_CYCLE
  from				5*TICKS_PER_CYCLE
  randstart
  
  transport				 udp
}

transport.udp            peernet.transport.TransportUDP
{
  port                   PORT
}


include.init             wire, topic_initializer

init.bootstrap           peernet.dynamics.WireKOut
{
  protocol               cyclon
  k                      4
}

init.wire                peernet.dynamics.BootstrapClient
{
  coordinator            kout
  protocol               cyclon
  #host                   localhost 
  host 					 fs0.das4.cs.vu.nl
  port                   BOOTSTRAP_PORT
}

init.topic_initializer 	 vitis.initializers.NodeTopicsInitializer
{
  protocol				 tman
 
 data                    vitis.topics.TopicsRepository
 {
   #file                 data/topics.txt
   file				data/fb_1ksample.txt
 }

}

include.control          traffic, network

control.ball             peernet.reports.BallExpansion
{
  protocol               cyclon
  n                      1
}

control.test			test.NetworkObserverVitis
{
	step				TICKS_PER_CYCLE
	from				5*TICKS_PER_CYCLE
	protocol			dissemination
	cyclon				cyclon
	vicinity			vicinity
	rings				rings
	log					results/logs/vitis
	statistics			results/statistics/vitis		
	subscriptionsize	results/subscriptionsize/vitis
	topicpopularity		results/topicpopularity/vitis
}

control.network		    vitis.observers.NetworkObserver
{
	protocol			dissemination
	step				TICKS_PER_CYCLE
	cyclon				cyclon
	tman     			tman
	vitis				vitis
	log					sim/vitis
	statistics			sim/v		
	subscriptionsize	sim/v
	topicpopularity		sim/v
}

control.traffic			vitis.observers.TrafficGeneratorNet
{
	step				TICKS_PER_CYCLE
	from				5*TICKS_PER_CYCLE
	protocol			dissemination
}
