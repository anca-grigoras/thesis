CV                       30
CG                       5
ENDTIME                  1000000000
NODES                    1000

CYCLE                    1000

engine.mode              sim
random.seed              0
simulation.endtime       ENDTIME
network.size             NODES
network.node             powerlaw.FitnessNode

network.node.lowest_fitness      1
network.node.highest_fitness     100
network.node.alpha               1.75


MEMORY                   
TERMINATION              
PERSIST_CONNECT          yes
PERSIST_DISCONNECT       yes



###################
# GOSSIP PROTOCOL #
###################

include.protocol         cyclon, powerlaw



transport.trans          peernet.transport.UniformRandomTransport
{
  mindelay               5
  maxdelay               10
}

protocol.cyclon          gossip.protocol.Cyclon
{
  descriptor             powerlaw.DescriptorFitness
  settings               gossip.protocol.CyclonSettings

  select                 gossip.comparator.AgeDescending
  duplicate              gossip.comparator.AgeAscending

  view                   CV
  gossip                 CG
  step                   CYCLE
  randstart

  transport              trans
}

protocol.powerlaw        powerlaw.PowerlawOverlay
{
  descriptor             powerlaw.DescriptorFitness
  linkable               cyclon

  step                   CYCLE
  randstart

  transport              trans
}


init.cyclon              peernet.dynamics.WireKOut
{
  protocol               cyclon
  k                      CV
}





###################
#    OBSERVERS    #
###################

#include.control          ana_degree
#include.control          ana_observer
include.control          degree


control.ana_observer     powerlaw.Observer
{
  protocol               powerlaw
  step                   10000
}

control.ball             peernet.reports.BallExpansion
{
  protocol               cyclon
  n                      1
}

control.degree          peernet.reports.DegreeStats
{
  protocol              powerlaw
  from                  10
  #until                 0
  undir
  method                list
  step                  10
}

control.ana_degree      powerlaw.Degree
{
  protocol              powerlaw
  step                  10000
}
