
#########################
# EXPERIMENT PARAMETERS #
#########################

NODES                    1000
ROUNDS                   100
TICKS_PER_ROUND          1000

engine.mode              sim
random.seed              0
simulation.endtime       ROUNDS * TICKS_PER_ROUND
simulation.logtime       5000
network.size             NODES

#debug.config full




#############
# PROTOCOLS #
#############

include.protocol         trace

protocol.trace           netsize.TraceDrivenSimulation
{
  trace                  /home/spyros/Data/netsize/trace.dat
  algorithm              pc
  transport              trans
  descriptor             peernet.core.Descriptor
  step                   TICKS_PER_ROUND
}


protocol.netsize         netsize.NetSize
{
  algorithm              myMinTopK
 
  linkable               oracle
  descriptor             peernet.core.DescriptorSim
  transport              trans
  step                   TICKS_PER_ROUND
}


protocol.oracle          gossip.vicinity.RandomOracle
{
  descriptor             gossip.descriptor.DescriptorSimAge
  view                   NODES
  at                     0
}



transport.trans          peernet.transport.UniformRandomTransport
{
  mindelay               TICKS_PER_ROUND / 2
  maxdelay               TICKS_PER_ROUND / 2
}


minTopK                netsize.MinTopK
{
  k                    50
  space                1000000000
}

myMinTopK              netsize.MyMinTopK
{
  k                    500
  space                100000
}

pc                     netsize.PC

pcsa                   netsize.PCSA
{
  I                    30
  m                    20
}

pcsa_bitset            netsize.PCSA_Bitset
{
  I                    30
}

ams                    netsize.AMS
{
  k                    100
}

bjkst2                 netsize.BJKST2
{
  k                    100
}

linear_counting        netsize.LinearCounting
{
  space                1000
}

mrb                    netsize.MRB
{
  levels               14
  m                    40
}

mrb_linked_list        netsize.MRBlinkedlist
{
  m                    40
}



###################
#    OBSERVERS    #
###################

control.test             netsize.SizeEstimation
{
  protocol               netsize
  step                   TICKS_PER_ROUND
}
